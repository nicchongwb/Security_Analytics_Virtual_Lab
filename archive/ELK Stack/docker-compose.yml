version: '3.7'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.3
    container_name: elasticsearch
    restart: always
    volumes:
      # Bind-mounted configuration uses elasticsearch.yml to configure Elasticsearch on Docker
      - type: bind
        source: ./configs/elasticsearch/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: admin
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elk  

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:8.4.3
    restart: always
    volumes:
      # Bind-mounted configuration uses logstash.conf to configure Logstash on Docker
      - type: bind
        source: ./configs/logstash/logstash.conf
        target: /usr/share/logstash/pipeline/logstash.conf
        read_only: true
    depends_on:
      - elasticsearch
    ports:
      - "5044:5044"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"    
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:8.4.3
    container_name: kibana
    restart: always       
    volumes:
      # Bind-mounted configuration uses kibana.yml to configure Kibana on Docker
      - type: bind
        source: ./configs/kibana/kibana.yml
        target: /etc/kibana/kibana.yml
    ports:
    - '5601:5601'
    depends_on:
      - elasticsearch  
    networks:
      - elk

networks:
  elk:
    driver: bridge
   
volumes: 
  elasticsearch: 