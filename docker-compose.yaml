# docker compose up -d
version: '2.10'

services:
# SuiteCRM
  s1:
    user: root
    image: suitecrm-server
    container_name: s1
    privileged: true
    networks: 
      suitecrm_nw:
        aliases: 
          - suitecrm
          - s1
        ipv4_address: 10.10.10.2
    stdin_open: true
    tty: true
    ports:
      - "8888:80"

  # SuiteCRM
  s2:
    image: ubuntu-network
    container_name: s2
    privileged: true
    networks: 
      suitecrm_nw:
        aliases: 
          - s2
        ipv4_address: 10.10.10.3
    stdin_open: true
    tty: true

  # TA1
  d1:
    image: ubuntu-network
    container_name: d1
    privileged: true
    networks: 
      internet_nw:
        aliases: 
          - ta1
          - d1
        ipv4_address: 172.16.10.4
      dev_nw:
        aliases:
          - ta1
          - d1
        ipv4_address: 192.168.10.2
    stdin_open: true
    tty: true

  # DMZ1
  dmz1:
    image: ubuntu-network
    container_name: dmz1
    privileged: true
    networks: 
      dmz_nw:
        aliases: 
          - dmz1
        ipv4_address: 10.10.20.2
    stdin_open: true
    tty: true

  # TA2 - Kali:
  k1:
    image: kali
    container_name: k1
    privileged: true
    networks: 
      internet_nw:
        aliases: 
          - ta2
          - kali
          - k1
        ipv4_address: 172.16.10.2
    environment:
      PG_SERVICE: postgresql@13-main
    cap_add:
      - NET_ADMIN
    stdin_open: true
    tty: true

  # Elasticsearch
  elasticsearch:
    image: elasticsearch
    container_name: elasticsearch
    restart: always
    privileged: true
    networks: 
      elk_nw:
        aliases: 
          - e1
          - elasticsearch
        ipv4_address: 192.168.30.2
    volumes:
      # Bind-mounted configuration uses elasticsearch.yml to configure Elasticsearch on Docker
      - type: bind
        source: ./elk_configs/elasticsearch/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: admin
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      discovery.type: single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    stdin_open: true
    tty: true

  # Logstash
  logstash:
    image: logstash
    container_name: logstash
    restart: always
    privileged: true
    networks: 
      elk_nw:
        aliases: 
          - e2
          - logstash
        ipv4_address: 192.168.30.3
    volumes:
      # Bind-mounted configuration uses logstash.conf to configure Logstash on Docker
      - type: bind
        source: ./elk_configs/logstash/logstash.conf
        target: /usr/share/logstash/pipeline/logstash.conf
        read_only: true
      - type: bind
        source: ./elk_configs/logstash/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
    depends_on:
      - elasticsearch
    ports:
      - "5044:5044"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"    
    stdin_open: true
    tty: true

  # kibana
  kibana:
    image: kibana
    container_name: kibana
    restart: always
    privileged: true
    networks: 
      elk_nw:
        aliases: 
          - e3
          - kibana
        ipv4_address: 192.168.30.4
    volumes:
      # Bind-mounted configuration uses kibana.yml to configure Kibana on Docker
      - type: bind
        source: ./elk_configs/kibana/kibana.yml
        target: /etc/kibana/kibana.yml
    ports:
    - '5601:5601'
    depends_on:
      - elasticsearch
    stdin_open: true
    tty: true

  heartbeat:
    image: heartbeat
    container_name: heartbeat
    restart: on-failure
    hostname: heartbeat
    user: root
    networks:
      elk_nw:
        aliases: 
          - e4
          - heartbeat
        ipv4_address: 192.168.30.5
    volumes:
      - type: bind
        source:  ./elk_configs/heartbeat/heartbeat.yml 
        target:  /usr/share/heartbeat/heartbeat.yml
    command: heartbeat -e -strict.perms=false
    depends_on:
      - elasticsearch  
      - kibana
    stdin_open: true
    tty: true
    

  # Internal Router
  r1:
    image: ubuntu-network
    container_name: r1
    privileged: true
    networks:
      suitecrm_nw:
        aliases:
          - r1
        ipv4_address: 10.10.10.254
      dev_nw:
        aliases:
          - r1
        ipv4_address: 192.168.10.254
      r1_r2_nw:
        aliases:
          - r1
        ipv4_address: 172.16.20.3
      r2_r3_nw:
        aliases:
          - r1
        ipv4_address: 172.16.40.3
    tty: true
    stdin_open: true

  # DMZ Router
  r2:
    image: ubuntu-network
    container_name: r2
    privileged: true
    networks:
      dmz_nw:
        aliases: 
          - r2
        ipv4_address: 10.10.20.254
      internet_nw:
        aliases: 
          - r2
          - dmz
        ipv4_address: 172.16.10.3
      r1_r2_nw:
        aliases:
          - r2
          - dmz
        ipv4_address: 172.16.20.2
    tty: true
    stdin_open: true

  # ELK Router
  r3:
    image: ubuntu-network
    container_name: r3
    privileged: true
    networks:
      r2_r3_nw:
        aliases:
          - r3
        ipv4_address: 172.16.40.2
      elk_nw:
        aliases:
          - r3
        ipv4_address: 192.168.30.254
    tty: true
    stdin_open: true


networks:
  suitecrm_nw:
    name: suitecrm_nw
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.10.10.0/24
  dmz_nw:
    name: dmz_nw
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.10.20.0/24

  dev_nw:
    name: dev_nw
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.10.0/24
  elk_nw:
    name: elk_nw
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.30.0/24

  internet_nw:
    name: internet_nw
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.10.0/24
  r1_r2_nw:
    name: r1_r2_nw
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.20.0/24
  r2_r3_nw:
    name: r2_r3_nw
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.40.0/24

volumes: 
  elasticsearch: 
